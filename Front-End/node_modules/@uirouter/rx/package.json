{
  "_args": [
    [
      {
        "raw": "@uirouter/rx@=0.3.1",
        "scope": "@uirouter",
        "escapedName": "@uirouter%2frx",
        "name": "@uirouter/rx",
        "rawSpec": "=0.3.1",
        "spec": "0.3.1",
        "type": "version"
      },
      "/home/savefolla/SWEDesigner/SWEDesigner-app/node_modules/ui-router-ng2"
    ]
  ],
  "_from": "@uirouter/rx@0.3.1",
  "_id": "@uirouter/rx@0.3.1",
  "_inCache": true,
  "_location": "/@uirouter/rx",
  "_nodeVersion": "7.9.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/rx-0.3.1.tgz_1492881006749_0.036207625176757574"
  },
  "_npmUser": {
    "name": "christopherthielen",
    "email": "christopherthielen@ikkyikkyikkypikangzoopboing.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@uirouter/rx@=0.3.1",
    "scope": "@uirouter",
    "escapedName": "@uirouter%2frx",
    "name": "@uirouter/rx",
    "rawSpec": "=0.3.1",
    "spec": "0.3.1",
    "type": "version"
  },
  "_requiredBy": [
    "/ui-router-ng2"
  ],
  "_resolved": "https://registry.npmjs.org/@uirouter/rx/-/rx-0.3.1.tgz",
  "_shasum": "66b098d3216f9eed2d8f3d11ad38367888ecb920",
  "_shrinkwrap": null,
  "_spec": "@uirouter/rx@=0.3.1",
  "_where": "/home/savefolla/SWEDesigner/SWEDesigner-app/node_modules/ui-router-ng2",
  "author": {
    "name": "Chris Thielen"
  },
  "bugs": {
    "url": "https://github.com/ui-router/rx/issues"
  },
  "dependencies": {},
  "description": "Reactive extensions for UI-Router",
  "devDependencies": {
    "@uirouter/core": "5.0.0",
    "conventional-changelog": "^1.1.0",
    "conventional-changelog-cli": "^1.2.0",
    "readline-sync": "^1.4.5",
    "rxjs": "^5.0.3",
    "shx": "^0.2.2",
    "typescript": "^2.1.4"
  },
  "directories": {},
  "dist": {
    "shasum": "66b098d3216f9eed2d8f3d11ad38367888ecb920",
    "tarball": "https://registry.npmjs.org/@uirouter/rx/-/rx-0.3.1.tgz"
  },
  "gitHead": "f8c011dbefb35164350e1ce95fab20c7497d8cba",
  "homepage": "https://github.com/ui-router/rx#readme",
  "keywords": [
    "ui-router",
    "reactive",
    "rxjs"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "christopherthielen",
      "email": "christopherthielen@ikkyikkyikkypikangzoopboing.com"
    },
    {
      "name": "christopherthielen2",
      "email": "christhielen@gmail.com"
    },
    {
      "name": "elboman",
      "email": "marco.botto@gmail.com"
    },
    {
      "name": "nateabele",
      "email": "nate.abele@gmail.com"
    }
  ],
  "module": "lib-esm/index.js",
  "name": "@uirouter/rx",
  "optionalDependencies": {},
  "peerDependencies": {
    "@uirouter/core": "5.0.0",
    "rxjs": "^5.0.3"
  },
  "readme": "# ui-router-rx\nReactive Extensions (RxJS) for UI-Router\n\n### What\n\nThis UI-Router plugin exposes various events in UI-Router \n   as [RxJS](https://github.com/ReactiveX/rxjs) Observables.\n\n   - Transitions (successfull, or any)\n   - Parameter values\n   - State registration/deregistrations\n\nThis helps you to use UI-Router in a reactive mode.\n\nThis plugin works with UI-Router Core 2.0 and above (angular-ui-router 1.0.0-rc.1+, ui-router-ng2 1.0.0-beta.4+, ui-router-react 0.4.0+).\n\n\n### Getting\n\n```\nnpm install ui-router-rx\n```\n\n### Enabling\n\nThis is a UI-Router Plugin.\nAdd the `UIRouterRx` plugin to your app's `UIRouter` instance.\n\n```js\nimport { UIRouterRx } from \"ui-router-rx\";\n\n// ... after UI-Router bootstrap, get a reference to the `UIRouter` instance\n// ... call `.plugin()` to register the ui-router-rx plugin\nuiRouter.plugin(UIRouterRx);\n```\n\n### Using\n\nIn a state definition,\n\n```js\nconst foo$ = (uiRouter) => \n    uiRouter.globals.params$.map(params => params.fooId)\n      .distinctUntilChanged()\n      .map(fooId => fetch('/foo/' + fooId).then(resp => resp.json()))\n\nvar fooState = {\n  name: 'foo',\n  url: '/foo/{fooId}',\n  component: FooComponent,\n  resolve: [ \n      { token: 'foo$', deps: [ UIRouter ], resolveFn: foo$ } \n  ]\n})\n```\n\nIn the component, access the `foo$` resolve value (it will be an Observable).  Subscribe to it and do something with it when it emits a new value. \n\n```js\nvar subscription = foo$.subscribe(foo => this.foo = foo);\n```\n\nDon't forget to unsubscribe when the component is destroyed.\n\n```js\nsubscription.unsubscribe();\n```\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ui-router/rx.git"
  },
  "scripts": {
    "build": "npm run clean && tsc && tsc -outDir lib-esm -m es6",
    "clean": "shx rm -rf lib lib-esm",
    "install": "node ./migrate/migratewarn.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "typings": "lib/index.d.ts",
  "version": "0.3.1"
}
